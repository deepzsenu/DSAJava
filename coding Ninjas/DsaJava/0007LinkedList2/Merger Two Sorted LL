/*

    Following is the Node class already written for the Linked List

    class LinkedListNode<T> {
        T data;
        LinkedListNode<T> next;
    
        public LinkedListNode(T data) {
            this.data = data;
        }
    }

*/

public class Solution {
    
    public static LinkedListNode<Integer> mergeTwoSortedLinkedLists(LinkedListNode<Integer> head1, LinkedListNode<Integer> head2) {
        //Your code goes here
        if (head1 == null) {
            return head2;
        }

        if (head2 == null) {
            return head1;
        }

        LinkedListNode<Integer> newHead = null, node1 = head1, node2 = head2, newNode = null;
        int data1 = node1.data, data2 = node2.data;
        if (data1 < data2) {
            newHead = node1;
            node1 = node1.next;
        } else {
            newHead = node2;
            node2 = node2.next;
        }
        newNode = newHead;
        while (node1 != null && node2 != null) {
            data1 = node1.data;
            data2 = node2.data;
            if (data1 < data2) {
                newNode.next = node1;
                newNode = newNode.next;
                node1 = node1.next;
            } else {
                newNode.next = node2;
                newNode = newNode.next;
                node2 = node2.next;
            }
        }

        while (node1 != null) {
            newNode.next = node1;
            newNode = newNode.next;
            node1 = node1.next;
        }
        while (node2 != null) {
            newNode.next = node2;
            newNode = newNode.next;
            node2 = node2.next;
        }
        return newHead;
    }

}